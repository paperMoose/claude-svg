{"version":3,"file":"ext-layer_view.js","sources":["../../../../src/editor/extensions/ext-layer_view/ext-layer_view.js","../../../../src/editor/extensions/ext-layer_view/locale/en.js"],"sourcesContent":["/**\n * @file ext-layer_view.js\n *\n * @license MIT\n *\n *\n */\n\nconst name = 'layer_view'\n\nconst loadExtensionTranslation = async function (svgEditor) {\n  let translationModule\n  const lang = svgEditor.configObj.pref('lang')\n  try {\n    translationModule = await import(`./locale/${lang}.js`)\n  } catch (_error) {\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\n    translationModule = await import('./locale/en.js')\n  }\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\n}\n\nexport default {\n  name,\n  async init (_S) {\n    const svgEditor = this\n    const { svgCanvas } = svgEditor\n    const { $id, $click } = svgCanvas\n    await loadExtensionTranslation(svgEditor)\n\n    const clickLayerView = (e) => {\n      $id('tool_layerView').pressed = !$id('tool_layerView').pressed\n      updateLayerView(e)\n    }\n\n    const updateLayerView = (e) => {\n      const drawing = svgCanvas.getCurrentDrawing()\n      const curLayer = drawing.getCurrentLayerName()\n      let layer = drawing.getNumLayers()\n      while (layer--) {\n        const name = drawing.getLayerName(layer)\n        if (name !== curLayer && $id('tool_layerView').pressed) {\n          drawing.setLayerVisibility(name, false)\n        } else {\n          drawing.setLayerVisibility(name, true)\n        }\n      }\n      $id('layerlist').querySelectorAll('tr.layer').forEach(\n        function (el) {\n          const layervis = el.querySelector('td.layervis')\n          const vis = el.classList.contains('layersel') || !$id('tool_layerView').pressed ? 'layervis' : 'layerinvis layervis'\n          layervis.setAttribute('class', vis)\n        }\n      )\n    }\n\n    return {\n      name: svgEditor.i18next.t(`${name}:name`),\n      // The callback should be used to load the DOM with the appropriate UI items\n      layersChanged () {\n        if ($id('tool_layerView').pressed) {\n          updateLayerView()\n        } if (svgEditor.configObj.curConfig.layerView) {\n          svgEditor.configObj.curConfig.layerView = false\n          $id('tool_layerView').pressed = true\n          updateLayerView()\n        }\n      },\n      layerVisChanged () {\n        if ($id('tool_layerView').pressed) {\n          $id('tool_layerView').pressed = !$id('tool_layerView').pressed\n        }\n      },\n      callback () {\n        const buttonTemplate = document.createElement('template')\n        const title = `${name}:buttons.0.title`\n        const key = `${name}:buttons.0.key`\n        buttonTemplate.innerHTML = `\n      <se-button id=\"tool_layerView\" title=\"${title}\" shortcut=\"${key}\" src=\"layer_view.svg\"></se-button>`\n        $id('editor_panel').append(buttonTemplate.content.cloneNode(true))\n        $click($id('tool_layerView'), clickLayerView.bind(this))\n      }\n    }\n  }\n}\n","export default {\n  name: 'layerview',\n  buttons: [\n    {\n      title: 'Enable/Disable Layer View',\n      key: 'Ctrl+Shift+L'\n    }\n  ]\n}\n"],"names":["name","loadExtensionTranslation","async","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","Promise","resolve","then","en$1","i18next","addResourceBundle","default","extLayer_view","init","_S","this","svgCanvas","$id","$click","clickLayerView","e","pressed","updateLayerView","drawing","getCurrentDrawing","curLayer","getCurrentLayerName","layer","getNumLayers","getLayerName","setLayerVisibility","querySelectorAll","forEach","el","layervis","querySelector","vis","classList","contains","setAttribute","t","layersChanged","curConfig","layerView","layerVisChanged","callback","buttonTemplate","document","createElement","title","key","innerHTML","append","content","cloneNode","bind","buttons"],"mappings":";;;;;;;AAQA,MAAMA,EAAO,aAEPC,yBAA2BC,eAAgBC,GAC/C,IAAIC,EACJ,MAAMC,EAAOF,EAAUG,UAAUC,KAAK,QACtC,IACEH,2RAA0BI,CAAO,YAAYH,OAC9C,CAAC,MAAOI,GACPC,QAAQC,KAAK,wBAAwBN,UAAaL,kBAClDI,QAA0BQ,QAAuBC,UAAAC,MAAA,WAAA,OAAAC,CAAA,GACnD,CACAZ,EAAUa,QAAQC,kBAAkBZ,EAAML,EAAMI,EAAkBc,QACpE,EAEA,IAAeC,EAAA,CACbnB,OACA,UAAMoB,CAAMC,GACV,MAAMlB,EAAYmB,MACZC,UAAEA,GAAcpB,GAChBqB,IAAEA,EAAGC,OAAEA,GAAWF,QAClBtB,yBAAyBE,GAE/B,MAAMuB,eAAkBC,IACtBH,EAAI,kBAAkBI,SAAWJ,EAAI,kBAAkBI,QACvDC,iBAAiB,EAGbA,gBAAmBF,IACvB,MAAMG,EAAUP,EAAUQ,oBACpBC,EAAWF,EAAQG,sBACzB,IAAIC,EAAQJ,EAAQK,eACpB,KAAOD,KAAS,CACd,MAAMlC,EAAO8B,EAAQM,aAAaF,GAC9BlC,IAASgC,GAAYR,EAAI,kBAAkBI,QAC7CE,EAAQO,mBAAmBrC,GAAM,GAEjC8B,EAAQO,mBAAmBrC,GAAM,EAErC,CACAwB,EAAI,aAAac,iBAAiB,YAAYC,SAC5C,SAAUC,GACR,MAAMC,EAAWD,EAAGE,cAAc,eAC5BC,EAAMH,EAAGI,UAAUC,SAAS,cAAgBrB,EAAI,kBAAkBI,QAAU,WAAa,sBAC/Fa,EAASK,aAAa,QAASH,EACjC,GACF,EAGF,MAAO,CACL3C,KAAMG,EAAUa,QAAQ+B,EAAE,GAAG/C,UAE7BgD,aAAAA,GACMxB,EAAI,kBAAkBI,SACxBC,kBACI1B,EAAUG,UAAU2C,UAAUC,YAClC/C,EAAUG,UAAU2C,UAAUC,WAAY,EAC1C1B,EAAI,kBAAkBI,SAAU,EAChCC,kBAEH,EACDsB,eAAAA,GACM3B,EAAI,kBAAkBI,UACxBJ,EAAI,kBAAkBI,SAAWJ,EAAI,kBAAkBI,QAE1D,EACDwB,QAAAA,GACE,MAAMC,EAAiBC,SAASC,cAAc,YACxCC,EAAQ,GAAGxD,oBACXyD,EAAM,GAAGzD,kBACfqD,EAAeK,UAAY,iDACWF,gBAAoBC,uCAC1DjC,EAAI,gBAAgBmC,OAAON,EAAeO,QAAQC,WAAU,IAC5DpC,EAAOD,EAAI,kBAAmBE,eAAeoC,KAAKxC,MACpD,EAEJ,2CCnFa,CACbtB,KAAM,YACN+D,QAAS,CACP,CACEP,MAAO,4BACPC,IAAK"}